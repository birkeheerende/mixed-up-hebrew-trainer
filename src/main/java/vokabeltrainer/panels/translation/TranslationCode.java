package vokabeltrainer.panels.translation;

import java.awt.ComponentOrientation;
import java.util.Arrays;

public enum TranslationCode
{
   none("", ComponentOrientation.LEFT_TO_RIGHT),
   af("Afrikaans", ComponentOrientation.LEFT_TO_RIGHT),
   af_ZA("Afrikaans (South Africa)", ComponentOrientation.LEFT_TO_RIGHT),
   ar("Arabic", ComponentOrientation.RIGHT_TO_LEFT),
   ar_AE("Arabic (U.A.E.)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_BH("Arabic (Bahrain)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_DZ("Arabic (Algeria)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_EG("Arabic (Egypt)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_IQ("Arabic (Iraq)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_JO("Arabic (Jordan)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_KW("Arabic (Kuwait)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_LB("Arabic (Lebanon)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_LY("Arabic (Libya)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_MA("Arabic (Morocco)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_OM("Arabic (Oman)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_QA("Arabic (Qatar)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_SA("Arabic (Saudi Arabia)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_SY("Arabic (Syria)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_TN("Arabic (Tunisia)", ComponentOrientation.RIGHT_TO_LEFT),
   ar_YE("Arabic (Yemen)", ComponentOrientation.RIGHT_TO_LEFT),
   az("Azeri (Latin)", ComponentOrientation.LEFT_TO_RIGHT),
   az_AZ_L("Azeri (Latin) (Azerbaijan)", ComponentOrientation.LEFT_TO_RIGHT),
   az_AZ_C("Azeri (Cyrillic) (Azerbaijan)", ComponentOrientation.LEFT_TO_RIGHT),
   be("Belarusian", ComponentOrientation.LEFT_TO_RIGHT),
   be_BY("Belarusian (Belarus)", ComponentOrientation.LEFT_TO_RIGHT),
   bg("Bulgarian", ComponentOrientation.LEFT_TO_RIGHT),
   bg_BG("Bulgarian (Bulgaria)", ComponentOrientation.LEFT_TO_RIGHT),
   bs_BA("Bosnian (Bosnia and Herzegovina)", ComponentOrientation.LEFT_TO_RIGHT),
   ca("Catalan", ComponentOrientation.LEFT_TO_RIGHT),
   ca_ES("Catalan (Spain)", ComponentOrientation.LEFT_TO_RIGHT),
   cs("Czech", ComponentOrientation.LEFT_TO_RIGHT),
   cs_CZ("Czech (Czech Republic)", ComponentOrientation.LEFT_TO_RIGHT),
   cy("Welsh", ComponentOrientation.LEFT_TO_RIGHT),
   cy_GB("Welsh (United Kingdom)", ComponentOrientation.LEFT_TO_RIGHT),
   
   da("Danish", ComponentOrientation.LEFT_TO_RIGHT),
   da_DK("Danish (Denmark)", ComponentOrientation.LEFT_TO_RIGHT),
   de("German", ComponentOrientation.LEFT_TO_RIGHT),
   de_AT("German (Austria)", ComponentOrientation.LEFT_TO_RIGHT),
   de_CH("German (Switzerland)", ComponentOrientation.LEFT_TO_RIGHT),
   de_DE("German (Germany)", ComponentOrientation.LEFT_TO_RIGHT),
   de_LI("German (Liechtenstein)", ComponentOrientation.LEFT_TO_RIGHT),
   de_LU("German (Luxembourg)", ComponentOrientation.LEFT_TO_RIGHT),
   de_original("German Original", ComponentOrientation.LEFT_TO_RIGHT),
   dv("Divehi", ComponentOrientation.LEFT_TO_RIGHT),
   
   dv_MV("Divehi (Maldives)", ComponentOrientation.LEFT_TO_RIGHT),
   el("Greek", ComponentOrientation.LEFT_TO_RIGHT),
   el_GR("Greek (Greece)", ComponentOrientation.LEFT_TO_RIGHT),
   en("English", ComponentOrientation.LEFT_TO_RIGHT),
   en_AU("English (Australia)", ComponentOrientation.LEFT_TO_RIGHT),
   en_BZ("English (Belize)", ComponentOrientation.LEFT_TO_RIGHT),
   en_CA("English (Canada)", ComponentOrientation.LEFT_TO_RIGHT),
   en_CB("English (Caribbean)", ComponentOrientation.LEFT_TO_RIGHT),
   en_GB("English (United Kingdom)", ComponentOrientation.LEFT_TO_RIGHT),
   en_IE("English (Ireland)", ComponentOrientation.LEFT_TO_RIGHT),
   en_JM("English (Jamaica)", ComponentOrientation.LEFT_TO_RIGHT),
   en_NZ("English (New Zealand)", ComponentOrientation.LEFT_TO_RIGHT),
   en_PH("English (Republic of the Philippines)", ComponentOrientation.LEFT_TO_RIGHT),
   en_TT("English (Trinidad and Tobago)", ComponentOrientation.LEFT_TO_RIGHT),
   en_US("English (United States)", ComponentOrientation.LEFT_TO_RIGHT),
   en_ZA("English (South Africa)", ComponentOrientation.LEFT_TO_RIGHT),
   en_ZW("English (Zimbabwe)", ComponentOrientation.LEFT_TO_RIGHT),
   eo("Esperanto", ComponentOrientation.LEFT_TO_RIGHT),
   es("Spanish", ComponentOrientation.LEFT_TO_RIGHT),
   es_AR("Spanish (Argentina)", ComponentOrientation.LEFT_TO_RIGHT),
   es_BO("Spanish (Bolivia)", ComponentOrientation.LEFT_TO_RIGHT),
   es_CL("Spanish (Chile)", ComponentOrientation.LEFT_TO_RIGHT),
   es_CO("Spanish (Colombia)", ComponentOrientation.LEFT_TO_RIGHT),
   es_CR("Spanish (Costa Rica", ComponentOrientation.LEFT_TO_RIGHT),
   es_DO("Spanish (Dominican Republic)", ComponentOrientation.LEFT_TO_RIGHT),
   es_EC("Spanish (Ecuador)", ComponentOrientation.LEFT_TO_RIGHT),
   es_ES_C("Spanish (Castilian)", ComponentOrientation.LEFT_TO_RIGHT),
   es_ES_S("Spanish (Spain)", ComponentOrientation.LEFT_TO_RIGHT),
   es_GT("Spanish (Guatemala)", ComponentOrientation.LEFT_TO_RIGHT),
   es_HN("Spanish (Honduras)", ComponentOrientation.LEFT_TO_RIGHT),
   es_MX("Spanish (Mexico)", ComponentOrientation.LEFT_TO_RIGHT),
   es_NI("Spanish (Nicaragua)", ComponentOrientation.LEFT_TO_RIGHT),
   es_PA("Spanish (Panama)", ComponentOrientation.LEFT_TO_RIGHT),
   es_PE("Spanish (Peru)", ComponentOrientation.LEFT_TO_RIGHT),
   es_PR("Spanish (Puerto Rico)", ComponentOrientation.LEFT_TO_RIGHT),
   es_PY("Spanish (Paraguay)", ComponentOrientation.LEFT_TO_RIGHT),
   es_SV("Spanish (El Salvador)", ComponentOrientation.LEFT_TO_RIGHT),
   es_UY("Spanish (Uruguay)", ComponentOrientation.LEFT_TO_RIGHT),
   es_VE("Spanish (Venezuela)", ComponentOrientation.LEFT_TO_RIGHT),
   et("Estonian", ComponentOrientation.LEFT_TO_RIGHT),
   et_EE("Estonian (Estonia)", ComponentOrientation.LEFT_TO_RIGHT),
   eu("Basque", ComponentOrientation.LEFT_TO_RIGHT),
   eu_ES("Basque (Spain)", ComponentOrientation.LEFT_TO_RIGHT),
   fa("Farsi", ComponentOrientation.LEFT_TO_RIGHT),
   fa_IR("Farsi (Iran)", ComponentOrientation.RIGHT_TO_LEFT),
   fi("Finnish", ComponentOrientation.LEFT_TO_RIGHT),
   fi_FI("Finnish (Finland)", ComponentOrientation.LEFT_TO_RIGHT),
   fo("Faroese", ComponentOrientation.LEFT_TO_RIGHT),
   fo_FO("Faroese (Faroe Islands)", ComponentOrientation.LEFT_TO_RIGHT),
   fr("French", ComponentOrientation.LEFT_TO_RIGHT),
   fr_BE("French (Belgium)", ComponentOrientation.LEFT_TO_RIGHT),
   fr_CA("French (Canada)", ComponentOrientation.LEFT_TO_RIGHT),
   fr_CH("French (Switzerland)", ComponentOrientation.LEFT_TO_RIGHT),
   fr_FR("French (France)", ComponentOrientation.LEFT_TO_RIGHT),
   fr_LU("French (Luxembourg)", ComponentOrientation.LEFT_TO_RIGHT),
   fr_MC("French (Principality of Monaco)", ComponentOrientation.LEFT_TO_RIGHT),
   gl("Galician", ComponentOrientation.LEFT_TO_RIGHT),
   gl_ES("Galician (Spain)", ComponentOrientation.LEFT_TO_RIGHT),
   gu("Gujarati", ComponentOrientation.LEFT_TO_RIGHT),
   gu_IN("Gujarati (India)", ComponentOrientation.LEFT_TO_RIGHT),
   he("Hebrew", ComponentOrientation.RIGHT_TO_LEFT),
   he_IL("Hebrew (Israel)", ComponentOrientation.RIGHT_TO_LEFT),
   hi("Hindi", ComponentOrientation.LEFT_TO_RIGHT),
   hi_IN("Hindi (India)", ComponentOrientation.LEFT_TO_RIGHT),
   hr("Croatian", ComponentOrientation.LEFT_TO_RIGHT),
   hr_BA("Croatian (Bosnia and Herzegovina)", ComponentOrientation.LEFT_TO_RIGHT),
   hr_HR("Croatian (Croatia)", ComponentOrientation.LEFT_TO_RIGHT),
   hu("Hungarian", ComponentOrientation.LEFT_TO_RIGHT),
   hu_HU("Hungarian (Hungary)", ComponentOrientation.LEFT_TO_RIGHT),
   hy("Armenian", ComponentOrientation.LEFT_TO_RIGHT),
   hy_AM("Armenian (Armenia)", ComponentOrientation.LEFT_TO_RIGHT),
   id("Indonesian", ComponentOrientation.LEFT_TO_RIGHT),
   id_ID("Indonesian (Indonesia)", ComponentOrientation.LEFT_TO_RIGHT),
   is("Icelandic", ComponentOrientation.LEFT_TO_RIGHT),
   is_IS("Icelandic (Iceland)", ComponentOrientation.LEFT_TO_RIGHT),
   it("Italian", ComponentOrientation.LEFT_TO_RIGHT),
   it_CH("Italian (Switzerland)", ComponentOrientation.LEFT_TO_RIGHT),
   it_IT("Italian (Italy)", ComponentOrientation.LEFT_TO_RIGHT),
   ja("Japanese", ComponentOrientation.LEFT_TO_RIGHT),
   ja_JP("Japanese (Japan)", ComponentOrientation.LEFT_TO_RIGHT),
   ka("Georgian", ComponentOrientation.LEFT_TO_RIGHT),
   ka_GE("Georgian (Georgia)", ComponentOrientation.LEFT_TO_RIGHT),
   kk("Kazakh", ComponentOrientation.LEFT_TO_RIGHT),
   kk_KZ("Kazakh (Kazakhstan)", ComponentOrientation.LEFT_TO_RIGHT),
   kn("Kannada", ComponentOrientation.LEFT_TO_RIGHT),
   kn_IN("Kannada (India)", ComponentOrientation.LEFT_TO_RIGHT),
   ko("Korean", ComponentOrientation.LEFT_TO_RIGHT),
   ko_KR("Korean (Korea)", ComponentOrientation.LEFT_TO_RIGHT),
   kok("Konkani", ComponentOrientation.LEFT_TO_RIGHT),
   kok_IN("Konkani (India)", ComponentOrientation.LEFT_TO_RIGHT),
   ky("Kyrgyz", ComponentOrientation.LEFT_TO_RIGHT),
   ky_KG("Kyrgyz (Kyrgyzstan)", ComponentOrientation.LEFT_TO_RIGHT),
   lt("Lithuanian", ComponentOrientation.LEFT_TO_RIGHT),
   lt_LT("Lithuanian (Lithuania)", ComponentOrientation.LEFT_TO_RIGHT),
   lv("Latvian", ComponentOrientation.LEFT_TO_RIGHT),
   lv_LV("Latvian (Latvia)", ComponentOrientation.LEFT_TO_RIGHT),
   mi("Maori", ComponentOrientation.LEFT_TO_RIGHT),
   mi_NZ("Maori (New Zealand)", ComponentOrientation.LEFT_TO_RIGHT),
   mk("FYRO Macedonian", ComponentOrientation.LEFT_TO_RIGHT),
   mk_MK("FYRO Macedonian (Former Yugoslav Republic of Macedonia)", ComponentOrientation.LEFT_TO_RIGHT),
   mn("Mongolian", ComponentOrientation.LEFT_TO_RIGHT),
   mn_MN("Mongolian (Mongolia)", ComponentOrientation.LEFT_TO_RIGHT),
   mr("Marathi", ComponentOrientation.LEFT_TO_RIGHT),
   mr_IN("Marathi (India)", ComponentOrientation.LEFT_TO_RIGHT),
   ms("Malay", ComponentOrientation.LEFT_TO_RIGHT),
   ms_BN("Malay (Brunei Darussalam)", ComponentOrientation.LEFT_TO_RIGHT),
   ms_MY("Malay (Malaysia)", ComponentOrientation.LEFT_TO_RIGHT),
   mt("Maltese", ComponentOrientation.LEFT_TO_RIGHT),
   mt_MT("Maltese (Malta)", ComponentOrientation.LEFT_TO_RIGHT),
   nb("Norwegian (Bokm?l)", ComponentOrientation.LEFT_TO_RIGHT),
   nb_NO("Norwegian (Bokm?l) (Norway)", ComponentOrientation.LEFT_TO_RIGHT),
   nl("Dutch", ComponentOrientation.LEFT_TO_RIGHT),
   nl_BE("Dutch (Belgium)", ComponentOrientation.LEFT_TO_RIGHT),
   nl_NL("Dutch (Netherlands)", ComponentOrientation.LEFT_TO_RIGHT),
   nn_NO("Norwegian (Nynorsk) (Norway)", ComponentOrientation.LEFT_TO_RIGHT),
   ns("Northern Sotho", ComponentOrientation.LEFT_TO_RIGHT),
   ns_ZA("Northern Sotho (South Africa)", ComponentOrientation.LEFT_TO_RIGHT),
   pa("Punjabi", ComponentOrientation.LEFT_TO_RIGHT),
   pa_IN("Punjabi (India)", ComponentOrientation.LEFT_TO_RIGHT),
   pl("Polish", ComponentOrientation.LEFT_TO_RIGHT),
   pl_PL("Polish (Poland)", ComponentOrientation.LEFT_TO_RIGHT),
   ps("Pashto", ComponentOrientation.LEFT_TO_RIGHT),
   ps_AR("Pashto (Afghanistan)", ComponentOrientation.LEFT_TO_RIGHT),
   pt("Portuguese", ComponentOrientation.LEFT_TO_RIGHT),
   pt_BR("Portuguese (Brazil)", ComponentOrientation.LEFT_TO_RIGHT),
   pt_PT("Portuguese (Portugal)", ComponentOrientation.LEFT_TO_RIGHT),
   qu("Quechua", ComponentOrientation.LEFT_TO_RIGHT),
   qu_BO("Quechua (Bolivia)", ComponentOrientation.LEFT_TO_RIGHT),
   qu_EC("Quechua (Ecuador)", ComponentOrientation.LEFT_TO_RIGHT),
   qu_PE("Quechua (Peru)", ComponentOrientation.LEFT_TO_RIGHT),
   ro("Romanian", ComponentOrientation.LEFT_TO_RIGHT),
   ro_RO("Romanian (Romania)", ComponentOrientation.LEFT_TO_RIGHT),
   ru("Russian", ComponentOrientation.LEFT_TO_RIGHT),
   ru_RU("Russian (Russia)", ComponentOrientation.LEFT_TO_RIGHT),
   sa("Sanskrit", ComponentOrientation.LEFT_TO_RIGHT),
   sa_IN("Sanskrit (India)", ComponentOrientation.LEFT_TO_RIGHT),
   se("Sami (Northern)", ComponentOrientation.LEFT_TO_RIGHT),
   se_FI_N("Sami (Northern) (Finland)", ComponentOrientation.LEFT_TO_RIGHT),
   se_FI_S("Sami (Skolt) (Finland)", ComponentOrientation.LEFT_TO_RIGHT),
   se_FI_I("Sami (Inari) (Finland)", ComponentOrientation.LEFT_TO_RIGHT),
   se_NO_N("Sami (Northern) (Norway)", ComponentOrientation.LEFT_TO_RIGHT),
   se_NO_L("Sami (Lule) (Norway)", ComponentOrientation.LEFT_TO_RIGHT),
   se_NO_S("Sami (Southern) (Norway)", ComponentOrientation.LEFT_TO_RIGHT),
   se_SE_N("Sami (Northern) (Sweden)", ComponentOrientation.LEFT_TO_RIGHT),
   se_SE_L("Sami (Lule) (Sweden)", ComponentOrientation.LEFT_TO_RIGHT),
   se_SE_S("Sami (Southern) (Sweden)", ComponentOrientation.LEFT_TO_RIGHT),
   sk("Slovak", ComponentOrientation.LEFT_TO_RIGHT),
   sk_SK("Slovak (Slovakia)", ComponentOrientation.LEFT_TO_RIGHT),
   sl("Slovenian", ComponentOrientation.LEFT_TO_RIGHT),
   sl_SI("Slovenian (Slovenia)", ComponentOrientation.LEFT_TO_RIGHT),
   sq("Albanian", ComponentOrientation.LEFT_TO_RIGHT),
   sq_AL("Albanian (Albania)", ComponentOrientation.LEFT_TO_RIGHT),
   sr_BA_L("Serbian (Latin) (Bosnia and Herzegovina)", ComponentOrientation.LEFT_TO_RIGHT),
   sr_BA_C("Serbian (Cyrillic) (Bosnia and Herzegovina)", ComponentOrientation.LEFT_TO_RIGHT),
   sr_SP_L("Serbian (Latin) (Serbia and Montenegro)", ComponentOrientation.LEFT_TO_RIGHT),
   sr_SP_C("Serbian (Cyrillic) (Serbia and Montenegro)", ComponentOrientation.LEFT_TO_RIGHT),
   sv("Swedish", ComponentOrientation.LEFT_TO_RIGHT),
   sv_FI("Swedish (Finland)", ComponentOrientation.LEFT_TO_RIGHT),
   sv_SE("Swedish (Sweden)", ComponentOrientation.LEFT_TO_RIGHT),
   sw("Swahili", ComponentOrientation.LEFT_TO_RIGHT),
   sw_KE("Swahili (Kenya)", ComponentOrientation.LEFT_TO_RIGHT),
   syr("Syriac", ComponentOrientation.LEFT_TO_RIGHT),
   syr_SY("Syriac (Syria)", ComponentOrientation.LEFT_TO_RIGHT),
   ta("Tamil", ComponentOrientation.LEFT_TO_RIGHT),
   ta_IN("Tamil (India)", ComponentOrientation.LEFT_TO_RIGHT),
   te("Telugu", ComponentOrientation.LEFT_TO_RIGHT),
   te_IN("Telugu (India)", ComponentOrientation.LEFT_TO_RIGHT),
   th("Thai", ComponentOrientation.LEFT_TO_RIGHT),
   th_TH("Thai (Thailand)", ComponentOrientation.LEFT_TO_RIGHT),
   tl("Tagalog", ComponentOrientation.LEFT_TO_RIGHT),
   tl_PH("Tagalog (Philippines)", ComponentOrientation.LEFT_TO_RIGHT),
   tn("Tswana", ComponentOrientation.LEFT_TO_RIGHT),
   tn_ZA("Tswana (South Africa)", ComponentOrientation.LEFT_TO_RIGHT),
   tr("Turkish", ComponentOrientation.LEFT_TO_RIGHT),
   tr_TR("Turkish (Turkey)", ComponentOrientation.LEFT_TO_RIGHT),
   tt("Tatar", ComponentOrientation.LEFT_TO_RIGHT),
   tt_RU("Tatar (Russia)", ComponentOrientation.LEFT_TO_RIGHT),
   ts("Tsonga", ComponentOrientation.LEFT_TO_RIGHT),
   uk("Ukrainian", ComponentOrientation.LEFT_TO_RIGHT),
   uk_UA("Ukrainian (Ukraine)", ComponentOrientation.LEFT_TO_RIGHT),
   ur("Urdu", ComponentOrientation.LEFT_TO_RIGHT),
   ur_PK("Urdu (Islamic Republic of Pakistan)", ComponentOrientation.LEFT_TO_RIGHT),
   uz("Uzbek (Latin)", ComponentOrientation.LEFT_TO_RIGHT),
   uz_UZ_L("Uzbek (Latin) (Uzbekistan)", ComponentOrientation.LEFT_TO_RIGHT),
   uz_UZ_C("Uzbek (Cyrillic) (Uzbekistan)", ComponentOrientation.LEFT_TO_RIGHT),
   vi("Vietnamese", ComponentOrientation.LEFT_TO_RIGHT),
   vi_VN("Vietnamese (Viet Nam)", ComponentOrientation.LEFT_TO_RIGHT),
   xh("Xhosa", ComponentOrientation.LEFT_TO_RIGHT),
   xh_ZA("Xhosa (South Africa)", ComponentOrientation.LEFT_TO_RIGHT),
   zh("Chinese", ComponentOrientation.LEFT_TO_RIGHT),
   zh_CN("Chinese (S)", ComponentOrientation.LEFT_TO_RIGHT),
   zh_HK("Chinese (Hong Kong)", ComponentOrientation.LEFT_TO_RIGHT),
   zh_MO("Chinese (Macau)", ComponentOrientation.LEFT_TO_RIGHT),
   zh_SG("Chinese (Singapore)", ComponentOrientation.LEFT_TO_RIGHT),
   zh_TW("Chinese (T)", ComponentOrientation.LEFT_TO_RIGHT),
   zu("Zulu", ComponentOrientation.LEFT_TO_RIGHT),
   zu_ZA("Zulu (South Africa)", ComponentOrientation.LEFT_TO_RIGHT),
   ANY_ltr_("any language, left to right", ComponentOrientation.LEFT_TO_RIGHT),
   ANY_rtl_("any language, right to left", ComponentOrientation.RIGHT_TO_LEFT);
   
   private String name;
   private ComponentOrientation orientation;
   
   TranslationCode(String name, ComponentOrientation orientation)
   {
      this.name = name;
      this.orientation = orientation;
   }

   public String getName()
   {
      return name;
   }

   public ComponentOrientation getOrientation()
   {
      return orientation;
   }

   public static TranslationCode[] valuesAvailable()
   {
	   return Arrays
	            .stream(TranslationCode.values())
	            .filter(value -> TranslationCode.de_original == value || TranslationCode.en == value)
	            .toArray(TranslationCode[]::new);
   }
   
   
   public static String[] stringsNoOriginal()
   {
      return Arrays
            .stream(TranslationCode.values())
            .filter(value -> TranslationCode.de_original != value)
            .map(code -> code.getName())
            .toArray(String[]::new);
   }

}
